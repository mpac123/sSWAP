package com.beingjavaguys.model;
// Generated 2017-05-28 06:05:05 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "User", catalog = "sswap", uniqueConstraints = @UniqueConstraint(columnNames = { "login", "password" }))
public class User implements java.io.Serializable {

	private Integer idUser;
	private ContactInfo contactInfo;
	private Faculty faculty;
	private UserStatus userStatus;
	private UserType userType;
	private String login;
	private String password;
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<ProjectParticipant> projectParticipants = new HashSet<ProjectParticipant>(0);
	private Set<UserCompetence> userCompetences = new HashSet<UserCompetence>(0);

	public User() {
	}

	public User(String login, String password) {
		this.login = login;
		this.password = password;
	}

	public User(ContactInfo contactInfo, Faculty faculty, UserStatus userStatus, UserType userType, String login,
			String password, Set<Message> messages, Set<ProjectParticipant> projectParticipants,
			Set<UserCompetence> userCompetences) {
		this.contactInfo = contactInfo;
		this.faculty = faculty;
		this.userStatus = userStatus;
		this.userType = userType;
		this.login = login;
		this.password = password;
		this.messages = messages;
		this.projectParticipants = projectParticipants;
		this.userCompetences = userCompetences;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idUser", unique = true, nullable = false)
	public Integer getIdUser() {
		return this.idUser;
	}

	public void setIdUser(Integer idUser) {
		this.idUser = idUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ContactInfo_idContactInfo")
	public ContactInfo getContactInfo() {
		return this.contactInfo;
	}

	public void setContactInfo(ContactInfo contactInfo) {
		this.contactInfo = contactInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Faculty_idFaculty")
	public Faculty getFaculty() {
		return this.faculty;
	}

	public void setFaculty(Faculty faculty) {
		this.faculty = faculty;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserStatus_idUserStatus")
	public UserStatus getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(UserStatus userStatus) {
		this.userStatus = userStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserType_idUserType")
	public UserType getUserType() {
		return this.userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	@Column(name = "login", nullable = false, length = 20)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", nullable = false, length = 64)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<ProjectParticipant> getProjectParticipants() {
		return this.projectParticipants;
	}

	public void setProjectParticipants(Set<ProjectParticipant> projectParticipants) {
		this.projectParticipants = projectParticipants;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserCompetence> getUserCompetences() {
		return this.userCompetences;
	}

	public void setUserCompetences(Set<UserCompetence> userCompetences) {
		this.userCompetences = userCompetences;
	}

}
