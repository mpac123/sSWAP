package com.beingjavaguys.model;
// Generated 2017-05-28 06:05:05 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "Project", catalog = "sswap")
public class Project implements java.io.Serializable {

	private int idProject;
	private String name;
	private Date startDate;
	private Set<ProjectParticipant> projectParticipants = new HashSet<ProjectParticipant>(0);
	private Set<ProjectCompetence> projectCompetences = new HashSet<ProjectCompetence>(0);

	public Project() {
	}

	public Project(int idProject) {
		this.idProject = idProject;
	}

	public Project(int idProject, String name, Date startDate, Set<ProjectParticipant> projectParticipants,
			Set<ProjectCompetence> projectCompetences) {
		this.idProject = idProject;
		this.name = name;
		this.startDate = startDate;
		this.projectParticipants = projectParticipants;
		this.projectCompetences = projectCompetences;
	}

	@Id

	@Column(name = "idProject", unique = true, nullable = false)
	public int getIdProject() {
		return this.idProject;
	}

	public void setIdProject(int idProject) {
		this.idProject = idProject;
	}

	@Column(name = "name", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "startDate", length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<ProjectParticipant> getProjectParticipants() {
		return this.projectParticipants;
	}

	public void setProjectParticipants(Set<ProjectParticipant> projectParticipants) {
		this.projectParticipants = projectParticipants;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<ProjectCompetence> getProjectCompetences() {
		return this.projectCompetences;
	}

	public void setProjectCompetences(Set<ProjectCompetence> projectCompetences) {
		this.projectCompetences = projectCompetences;
	}

}
